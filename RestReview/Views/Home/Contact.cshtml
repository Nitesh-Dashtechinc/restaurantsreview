@*@model IEnumerable<Yelp.Api.Models.BusinessResponse>*@
@model RestReview.Models.Analyzes

@{
    ViewBag.Title = "Contact";
}
<style type="text/css" media="screen and (max-width: 767px)">
    .progress-div {
        padding-top: 20px;
    }

    .progress-title {
        font-size: 8px;
        font-weight: 800;
    }

    .progress-percentage {
        color: black;
        transform: translate(-50%, -111%);
        font-weight: 800;
        font-size: 30px;
        position: absolute;
        width: 100%;
        top: 65%;
        left: 35%;
        text-align: center;
        padding: 0px 60px;
    }
</style>
<style type="text/css" media="(min-width: 768px)">
    .progress-div {
        padding-top: 20px;
    }

    .progress-title {
        font-size: 10px;
        font-weight: 800;
    }

    .progress-percentage {
        color: black;
        transform: translate(-50%, -110%);
        font-weight: 800;
        font-size: 45px;
        position: absolute;
        width: 100%;
        top: 65%;
        left: 50%;
        text-align: center;
        padding: 0px 60px;
    }
</style>
<style type="text/css" media="(min-width: 992px)">
    .progress-div {
        padding-top: 20px;
    }

    .progress-title {
        font-size: 12px;
        font-weight: 800;
    }

    .progress-percentage {
        color: black;
        transform: translate(-50%, -100%);
        font-weight: 800;
        font-size: 65px;
        position: absolute;
        width: 100%;
        top: 63%;
        left: 52%;
        text-align: center;
        /*padding: 0px 60px;*/
    }
</style>
<style type="text/css" media="(min-width: 1200px)">
    .progress-div {
        padding-top: 20px;
    }

    .progress-title {
        font-size: 12px;
        font-weight: 800;
    }

    .progress-percentage {
        color: black;
        transform: translate(-50%, -100%);
        font-weight: 800;
        font-size: 80px;
        position: absolute;
        width: 100%;
        top: 65%;
        left: 53%;
        text-align: center;
    }
</style>
<style type="text/css" media="(min-width: 2560px)">
    .progress-div {
        padding-top: 20px;
    }

    .progress-title {
        font-size: 12px;
        font-weight: 800;
    }

    .progress-percentage {
        color: black;
        transform: translate(-50%, -100%);
        font-weight: 800;
        font-size: 90px;
        position: absolute;
        width: 100%;
        top: 65%;
        left: 53%;
    }
</style>
<style type="text/css">
    .progress-bar-black {
        background-color: black;
    }

    .progress {
        margin-bottom: 0px;
        height: 10px;
    }

    .border-baner {
        background: #72a0fe;
        border: 10px solid white;
        border-radius: 15px;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
    }

    .divider {
        background: white;
        height: 5px;
        margin: 6% 0%;
    }

    .btn-orange {
        color: white;
        background: #eb6a05;
    }

    .p-t-5px {
        padding-top: 5px;
    }

    .p-t-15px {
        padding-top: 15px;
    }
</style>
<link href="~/Content/loading-bar.css" rel="stylesheet" type="text/css" />
<style type="text/css">
    @@media screen and (max-width: 767px) {
        .ldBar-label {
            color: black;
            font-family: tahoma;
            font-size: inherit;
        }
    }

    @@media screen and (min-width: 768px) {
        .ldBar-label {
            color: black;
            font-family: tahoma;
            font-size: inherit;
        }
    }

    @@media screen and (min-width: 992px) {
        .ldBar-label {
            color: black;
            font-family: tahoma;
            font-size: inherit;
        }
    }

    @@media screen and (min-width: 1200px) {
        .ldBar-label {
            color: black;
            font-family: tahoma;
            font-size: 5.1em;
            font-weight: 900
        }
    }

    @@media screen and (min-width: 2560px) {
        .ldBar-label {
            color: black;
            font-family: tahoma;
            font-size: 5.1em;
            font-weight: 900
        }
    }

    @@media screen and (min-width: 2560px) {
        .bottom-height {
            margin-bottom: 10%;
        }

        .center-Icons {
            margin-left: 20%;
        }

        .ldBar-label {
            color: black;
            font-family: tahoma;
            font-size: 5.1em;
            font-weight: 900
        }
    }
    /*.ldBar-label {
        color: black;
        font-family: tahoma;
        font-size: 5.1em;
        font-weight: 900
    }*/
    svg {
        transform: rotate(180deg);
    }
</style>
<div class="container">
    <div class="row" style="margin-top:7%;">
        <div class="text-center col-lg-12 col-md-12 page_title">
            Your Restaurant's Marketing Grade is:
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-3" id="progress_div_left"></div>
            @*<div class="col-lg-4 col-md-4 col-sm-4 col-xs-6" id="progress_div_center">
                    <div class="my-progress-bar" id="progress_div_right"></div>
                </div>*@
            <div id="mainProgressbar" class="ldBar label-center" style="width:28%; height:50%; margin:auto" data-value="@Model.MainProgress" data-preset="circle"></div>
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-3"></div>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div class="progress-div">
                    <div class="text-uppercase"><span class="progress-title"> Data Consistency</span></div>
                </div>
                <div class="progress">
                    <div class="progress-bar progress-bar-black" id="DataConsistencyProgressbar" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width:0%">
                    </div>
                </div>
                <div>
                    @if (Model.DataDependecy != null)
                    {
                        <h5><strong class="initialism">@Model.DataDependecy / </strong><small style="color: white;">10</small></h5>
                    }
                    else
                    {
                        <h5><strong class="initialism">0 / </strong><small style="color: white;">10</small></h5>
                    }
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div class="progress-div"><div class="text-uppercase"><span class="progress-title">Reviews</span></div></div>
                <div class="progress">
                    <div class="progress-bar progress-bar-black" id="RateProgressbar" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width:0%">
                    </div>
                </div>
                <div>
                    @if (Model.RatingData != null)
                    {
                        <h5><strong class="initialism">@Model.RatingData / </strong><small style="color: white;">40</small></h5>
                    }
                    else
                    {
                        <h5><strong class="initialism">0 / </strong><small style="color: white;">40</small></h5>
                    }
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div><div class="text-uppercase"><span class="progress-title">Social Media Completion <br />& Engagement</span></div></div>
                <div class="progress">
                    <div class="progress-bar progress-bar-black" id="FacebookProgressbar" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width:0%">
                    </div>
                </div>
                <div>
                    @if (Model.SocialMediaEngagement != null)
                    {
                        <h5><strong class="initialism">@Model.SocialMediaEngagement / </strong><small style="color: white;">35</small></h5>
                    }
                    else
                    {
                        <h5><strong class="initialism">0 / </strong><small style="color: white;">35</small></h5>
                    }
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div class="progress-div"><div class="text-uppercase"><span class="progress-title">website</span></div></div>
                <div class="progress">
                    <div class="progress-bar progress-bar-black" id="websiteProgressbar" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width:0%">
                    </div>
                </div>
                <div>
                    @if (Model.WebSite != null)
                    {
                        <h5><strong class="initialism">@Model.WebSite / </strong><small style="color: white;">15</small></h5>
                    }
                    else
                    {
                        <h5><strong class="initialism">0/ </strong><small style="color: white;">15</small></h5>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container" style="padding-top:7%;padding-bottom:8%; ">
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6 ">
            <div class="col-md-12 border-baner">
                <div class="text-center" style="color:white;"><p><h1><b>To see full results and  recommendations, please fill out your contact information</b></h1></p></div>
                <div class="divider"></div>
                <div class="box-content form-group required" style="padding:0% 15%;">
                    <form id="mktoForm_6143"></form>
                </div>
            </div>
        </div>
        <div class="col-md-3">

        </div>
    </div>
    <div class=""><br /></div>
    <div class="row">
        <div class="col-md-4"></div>
        <div class="col-md-4">
            <div class="text-center">
                <a href="@Url.Action("Analyze", "Home")" class="btn btn-block btn-orange">GET FULL RESULTS</a>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/js/loading-bar.js" type="text/javascript"></script>
    <script src="//app-sj01.marketo.com/js/forms2/js/forms2.min.js"></script>
    <script>MktoForms2.loadForm("//app-sj01.marketo.com", "025-DFN-263", 6143);</script>

    <script type="text/javascript">
        var circlebarvalue = {};
        $(document).ready(function () {
            //
            //var val = $("#mainProgressbar.ldBar.label-center")[0].innerText.concat('%');
            var dynamic_line_width = 0;
            if (768 >= $(window).width())
                dynamic_line_width = 8
            else
                dynamic_line_width = 12;

            var progressValue = (@Model.RatingData * 100) / 40;
            $('#RateProgressbar').attr("style", "width:" + progressValue + "%");

            var dataConsistencyProgressValue = (@Model.DataDependecy * 100) / 10;
            $('#DataConsistencyProgressbar').attr("style", "width:" + dataConsistencyProgressValue + "%");

             var websiteProgressValue = (@Model.WebSite * 100) / 15;
            $('#websiteProgressbar').attr("style", "width:" + websiteProgressValue + "%");

             var fbProgressValue = (@Model.SocialMediaEngagement * 100) / 35;
            $('#FacebookProgressbar').attr("style", "width:" + fbProgressValue + "%");
           
            @*var mainProgress = @Model.RatingData + @Model.DataDependecy + @Model.WebSite + @Model.SocialMediaEngagement;
            circlebarvalue = $("#mainProgressbar.ldBar.label-center")[0].innerText.concat('%');*@

            @*var mainProgress = @Model.RatingData + @Model.DataDependecy + @Model.WebSite + @Model.SocialMediaEngagement;
            $(".my-progress-bar").circularProgress({
                line_width: dynamic_line_width,
                color: "black",
                starting_position: 50, // 12.00 o' clock position, 25 stands for 3.00 o'clock (clock-wise)
                percent: 0, // percent starts from
                percentage: true,
            }).circularProgress('animate', mainProgress, 1000);*@
        });

        //debugger
        //valu = $("#mainProgressbar.ldBar.label-center")[0].innerText.concat('%');
        //document.getElementById("mainProgressbar").value = circlebarvalue;

        (function ($) {
            var divsize = $('#progress_div_center').width() + "px";
            var global_settings = {};
            var methods = {
                init: function (options) {
                    var settings = $.extend({
                        color: "#72a0fe",
                        height: divsize,
                        width: divsize,
                        line_width: 8,
                        starting_position: 50,
                        percent: 100,
                        counter_clockwise: false,
                        percentage: true,
                        text: ''
                    }, options);
                    global_settings = settings;

                    var percentage = $("<div class='progress-percentage'></div>");

                    if (!global_settings.percentage) {
                        percentage.text(global_settings.percentage);
                    }
                    $(this).append(percentage);

                    if (global_settings.starting_position != 100) {
                        global_settings.starting_position = global_settings.starting_position % 100;
                    }
                    if (global_settings.ending_position != 100) {
                        global_settings.ending_position = global_settings.ending_position % 100;
                    }
                    appendUnit(global_settings.width);
                    appendUnit(global_settings.height);

                    $(this).css({
                        "height": global_settings.height,
                        "width": global_settings.width
                    });
                    $(this).addClass("circular-progress-bar");

                    $(this).find("canvas").remove();

                    $(this).append(createCanvas($(this)));

                    return this;
                },
                percent: function (value) {
                    global_settings.percent = value;
                    $(this).css({
                        "height": global_settings.height,
                        "width": global_settings.width
                    });
                    $(this).children("canvas").remove();
                    $(this).append(createCanvas($(this)));
                    return this;
                },
                animate: function (value, time) {
                    $(this).css({
                        "height": global_settings.height,
                        "width": global_settings.width
                    });
                    var num_of_steps = time / 10;
                    var percent_change = Math.round((value - global_settings.percent) / num_of_steps);
                    if (percent_change <= 0)
                        percent_change = 1;

                    var scope = $(this);
                    var theInterval = setInterval(function () {
                        if (global_settings.percent < value) {
                            scope.children("canvas").remove();
                            global_settings.percent += percent_change;
                            scope.append(createCanvas(scope));
                        } else {
                            clearInterval(theInterval);
                        }
                    }, 10);
                    return this;
                }
            };

            $.fn.circularProgress = function (methodOrOptions) {
                if (methods[methodOrOptions]) {
                    return methods[methodOrOptions].apply(this, Array.prototype.slice.call(arguments, 1));
                } else if (typeof methodOrOptions === 'object' || !methodOrOptions) {
                    return methods.init.apply(this, arguments);
                } else {
                    $.error('Method ' + methodOrOptions + ' does not exist.');
                }
            };

            /* =========================================================================
                PRIVATE FUNCTIONS
            ========================================================================= */

            function removeUnit(apples) {
                if (apples.indexOf("px")) {
                    return apples.substring(0, apples.length - 2);
                } else if (canvas_height.indexOf("%")) {
                    return apples.substring(0, apples.length - 1);
                }
            };
            function appendUnit(apples) {
                if (apples.toString().indexOf("px") < -1 && apples.toString().indexOf("%") < -1) {
                    return apples += "px";
                }
            };
            function calcPos(apples, percent) {
                if (percent < 0) {
                    var starting_degree = (parseInt(apples) / 100) * 360;
                    var starting_radian = starting_degree * (Math.PI / 180);
                    return starting_radian - (Math.PI / 2);
                } else {
                    var ending_degree = ((parseInt(apples) + parseInt(percent)) / 100) * 360;
                    var ending_radian = ending_degree * (Math.PI / 180);
                    return ending_radian - (Math.PI / 2);
                }
            };
            function insertText(scope) {
                $(".progress-percentage").text(global_settings.percent + '%');
            }
            function createCanvas(scope) {
                var canvas_height = removeUnit(global_settings.height.toString());
                var canvas_width = removeUnit(global_settings.width.toString());
                var canvas = document.createElement("canvas");
                canvas.height = canvas_height;
                canvas.width = canvas_width;

                var ctx = canvas.getContext("2d");
                ctx.strokeStyle = global_settings.color;
                ctx.lineWidth = global_settings.line_width;

                ctx.beginPath();

                var starting_radian = calcPos(global_settings.starting_position, -1);
                var ending_radian = calcPos(global_settings.starting_position, global_settings.percent);
                var radius = 0;
                var xcoord = canvas_width / 2;
                var ycoord = canvas_height / 2;

                // Height or width greater
                if (canvas_height >= canvas_width) {
                    radius = canvas_width * 0.9 / 2 - (global_settings.line_width * 2);
                } else {
                    radius = canvas_height * 0.9 / 2 - (global_settings.line_width * 2);
                }
                ctx.arc(xcoord, ycoord, radius, starting_radian, ending_radian, global_settings.counter_clockwise);
                ctx.stroke();

                if (global_settings.percentage) {
                    insertText(scope);
                }
                return canvas;
            };
        }(jQuery));
    </script>
    
}